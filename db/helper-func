#
# Libreria delle funzioni helper per la generazione degli script SQL archibus su Oracle.
# @date Thursday, 30. October 2014
# @author Pucci
#


# Caricamento del file di configurazione con i parametri di default (nome_istanza,password,dimensione datafiles).
# Sono utilizzati se non diversamente specificati dall' interfaccia grafica.
CONFIG_FILE=$(dirname $(realpath $0))/defaults.cfg
test -r "$CONFIG_FILE" || echo "$CONFIG_FILE not found" && source "$CONFIG_FILE"



# "$CWD" "$NEW_INSTANCE_NAME"
genera-script-base() {

    # Carica i default se non specificato diversamente
	if [ -z "$2" ] ; then INSTANCE_NAME=$DEFAULT_INSTANCE_NAME;	else INSTANCE_NAME=$2; fi;

	if [ -d "$1" ] ; then

		pushd . > /dev/null

		cd "$1" && 	cp -a TEMPLATE "$INSTANCE_NAME"

		find "$INSTANCE_NAME" -maxdepth 1 -type f -a \( -name '*.sql' -o -name '*.sh' \) | xargs sed -i "s/TEMPLATE/$INSTANCE_NAME/g";

		cd "$INSTANCE_NAME" && find . -type f -name "*TEMPLATE*"|while read f; do mv $f ${f/TEMPLATE/$INSTANCE_NAME} ; done;

		popd

	else
		echo "Directory "$1" inesistente";
	fi;

}


# "$CWD" "$NEW_INSTANCE_NAME" "$NEW_AFM_PASSWORD"
genera-script-cambio-password() {

    # Carica i default se non specificato diversamente
	if [ -z "$2" ] ; then INSTANCE_NAME=$DEFAULT_INSTANCE_NAME; else INSTANCE_NAME=$2; fi;
    if [ -z "$3" ] ; then NEW_AFM_PASSWORD=$DEFAULT_AFM_PASSWORD; else	NEW_AFM_PASSWORD=$3; fi;

	if [ -d "$1"/"$INSTANCE_NAME" ] ; then

		pushd . > /dev/null

		cd "$1"

		find "$INSTANCE_NAME" -maxdepth 1 -type f -name "pwd.sql" | xargs sed -i "s/AFM_PASSWD/$NEW_AFM_PASSWORD/g";

		popd

	else 
		echo "Directory "$1"/"$INSTANCE_NAME" inesistente";
	fi;

}

# "$CWD" "$NEW_INSTANCE_NAME" "$N_DATAFILE" "$SIZE (MB)"
genera-script-tablespace-AFM_P1() {

    # Carica i default se non specificato diversamente
	if [ -z "$2" ] ; then INSTANCE_NAME=$DEFAULT_INSTANCE_NAME; else INSTANCE_NAME=$2; fi;
    if [ -z "$3" ] ; then NEW_AFM_P1_NUM_DATAFILES=$DEFAULT_AFM_P1_NUM_DATAFILES; else NEW_AFM_P1_NUM_DATAFILES=$3; fi;
    if [ -z "$4" ] ; then NEW_SIZE_PARAM=$DEFAULT_SIZE; else NEW_SIZE_PARAM=$4; fi;

	if [ -d "$1"/"$INSTANCE_NAME" ] ; then

		pushd . > /dev/null

		cd "$1"

		find "$INSTANCE_NAME" -maxdepth 1 -type f -name "*.sql" | xargs sed -i "s/DEFAULT_SIZE_PARAM/$NEW_SIZE_PARAM/g";

		unset script

		script=$(cat <<EOF
SPOOL TBLSPACE.LST \n
EOF
		)

		for datafile_idx in `seq 1 "$NEW_AFM_P1_NUM_DATAFILES"`; do

			if [ "$datafile_idx" -eq 1 ] ; then

				script+=$(cat <<EOF
ALTER DATABASE DATAFILE '/opt/oracle/oradata/$INSTANCE_NAME/AFM_P1.dbf' AUTOEXTEND ON NEXT 500M MAXSIZE $NEW_SIZE_PARAM; \n
EOF
				)

			else

				script+=$(cat <<EOF
ALTER TABLESPACE "AFM_P1" ADD DATAFILE '/opt/oracle/oradata/$INSTANCE_NAME/AFM_P$datafile_idx.dbf' SIZE $NEW_SIZE_PARAM AUTOEXTEND ON NEXT 500M MAXSIZE $NEW_SIZE_PARAM; \n
EOF
				)

			fi;
			
		done;
		
		echo -en "$script" >> "$1"/"$INSTANCE_NAME"/tblspace.sql

		popd

	else
		echo "Directory "$1"/"$INSTANCE_NAME" inesistente";
	fi;

}

# "$CWD" "$NEW_INSTANCE_NAME" "$N_DATAFILE" "$SIZE (MB)"
genera-script-tablespace-AFM_BLOB() {

    # Carica i default se non specificato diversamente
	if [ -z "$2" ] ; then INSTANCE_NAME=$DEFAULT_INSTANCE_NAME; else INSTANCE_NAME=$2; fi;
    if [ -z "$3" ] ; then NEW_AFM_DOCMGMT_NUM_DATAFILES=$DEFAULT_AFM_DOCMGMT_NUM_DATAFILES; else NEW_AFM_DOCMGMT_NUM_DATAFILES=$3; fi;
    if [ -z "$4" ] ; then NEW_SIZE_PARAM=$DEFAULT_SIZE; else NEW_SIZE_PARAM=$4; fi;

	if [ -d "$1"/"$INSTANCE_NAME" ] ; then

		pushd . > /dev/null

		cd "$1"

		find "$INSTANCE_NAME" -maxdepth 1 -type f -name "*.sql" | xargs sed -i "s/DEFAULT_SIZE_PARAM/$NEW_SIZE_PARAM/g";

		unset script

		for datafile_idx in `seq 1 "$NEW_AFM_DOCMGMT_NUM_DATAFILES"`; do

			if [ "$datafile_idx" -eq 1 ] ; then

				script+=$(cat <<EOF
ALTER DATABASE DATAFILE '/opt/oracle/oradata/$INSTANCE_NAME/AFMDOCMGMT_BLOB1.dbf' AUTOEXTEND ON NEXT 500M MAXSIZE $NEW_SIZE_PARAM; \n
EOF
				)

			else

				script+=$(cat <<EOF
ALTER TABLESPACE "AFMDOCMGMT_BLOB" ADD DATAFILE '/opt/oracle/oradata/$INSTANCE_NAME/AFMDOCMGMT_BLOB$datafile_idx.dbf' SIZE $NEW_SIZE_PARAM AUTOEXTEND ON NEXT 500M MAXSIZE $NEW_SIZE_PARAM; \n
EOF
				)

			fi;
			
		done;
		
		script+=$(cat <<EOF
SPOOL OFF \n
EXIT \n
EOF
		)

		echo -en "$script" >> "$1"/"$INSTANCE_NAME"/tblspace.sql

		popd

	else
		echo "Directory "$1"/"$INSTANCE_NAME" inesistente";
	fi;

}